// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KafeidoGetModelInferenceResponse kafeido get model inference response
//
// swagger:model kafeidoGetModelInferenceResponse
type KafeidoGetModelInferenceResponse struct {

	// is input supported
	IsInputSupported bool `json:"isInputSupported,omitempty"`

	// is model ready
	IsModelReady bool `json:"isModelReady,omitempty"`

	// model inference Id
	ModelInferenceID string `json:"modelInferenceId,omitempty"`

	// model name
	ModelName string `json:"modelName,omitempty"`

	// model Uri
	ModelURI string `json:"modelUri,omitempty"`

	// named pipeline Id
	NamedPipelineID string `json:"namedPipelineId,omitempty"`

	// project Id
	ProjectID string `json:"projectId,omitempty"`

	// runtime version
	RuntimeVersion string `json:"runtimeVersion,omitempty"`
}

// Validate validates this kafeido get model inference response
func (m *KafeidoGetModelInferenceResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kafeido get model inference response based on context it is used
func (m *KafeidoGetModelInferenceResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *KafeidoGetModelInferenceResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KafeidoGetModelInferenceResponse) UnmarshalBinary(b []byte) error {
	var res KafeidoGetModelInferenceResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
