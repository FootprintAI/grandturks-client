// Code generated by go-swagger; DO NOT EDIT.

package kafeido

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/footprintai/grandturks-client/v2/api/app/kafeido/proto/go-openapiv2/models"
)

// KafeidoDeleteProjectReader is a Reader for the KafeidoDeleteProject structure.
type KafeidoDeleteProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KafeidoDeleteProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKafeidoDeleteProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewKafeidoDeleteProjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewKafeidoDeleteProjectOK creates a KafeidoDeleteProjectOK with default headers values
func NewKafeidoDeleteProjectOK() *KafeidoDeleteProjectOK {
	return &KafeidoDeleteProjectOK{}
}

/*
KafeidoDeleteProjectOK describes a response with status code 200, with default header values.

A successful response.
*/
type KafeidoDeleteProjectOK struct {
	Payload models.KafeidoDeleteProjectResponse
}

// IsSuccess returns true when this kafeido delete project o k response has a 2xx status code
func (o *KafeidoDeleteProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kafeido delete project o k response has a 3xx status code
func (o *KafeidoDeleteProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kafeido delete project o k response has a 4xx status code
func (o *KafeidoDeleteProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kafeido delete project o k response has a 5xx status code
func (o *KafeidoDeleteProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kafeido delete project o k response a status code equal to that given
func (o *KafeidoDeleteProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the kafeido delete project o k response
func (o *KafeidoDeleteProjectOK) Code() int {
	return 200
}

func (o *KafeidoDeleteProjectOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/{projectId}][%d] kafeidoDeleteProjectOK  %+v", 200, o.Payload)
}

func (o *KafeidoDeleteProjectOK) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/{projectId}][%d] kafeidoDeleteProjectOK  %+v", 200, o.Payload)
}

func (o *KafeidoDeleteProjectOK) GetPayload() models.KafeidoDeleteProjectResponse {
	return o.Payload
}

func (o *KafeidoDeleteProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKafeidoDeleteProjectDefault creates a KafeidoDeleteProjectDefault with default headers values
func NewKafeidoDeleteProjectDefault(code int) *KafeidoDeleteProjectDefault {
	return &KafeidoDeleteProjectDefault{
		_statusCode: code,
	}
}

/*
KafeidoDeleteProjectDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type KafeidoDeleteProjectDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this kafeido delete project default response has a 2xx status code
func (o *KafeidoDeleteProjectDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this kafeido delete project default response has a 3xx status code
func (o *KafeidoDeleteProjectDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this kafeido delete project default response has a 4xx status code
func (o *KafeidoDeleteProjectDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this kafeido delete project default response has a 5xx status code
func (o *KafeidoDeleteProjectDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this kafeido delete project default response a status code equal to that given
func (o *KafeidoDeleteProjectDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the kafeido delete project default response
func (o *KafeidoDeleteProjectDefault) Code() int {
	return o._statusCode
}

func (o *KafeidoDeleteProjectDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/{projectId}][%d] kafeido_DeleteProject default  %+v", o._statusCode, o.Payload)
}

func (o *KafeidoDeleteProjectDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/{projectId}][%d] kafeido_DeleteProject default  %+v", o._statusCode, o.Payload)
}

func (o *KafeidoDeleteProjectDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *KafeidoDeleteProjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
