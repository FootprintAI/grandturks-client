// Code generated by go-swagger; DO NOT EDIT.

package kafeido_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/footprintai/grandturks-client/v2/api/app/kafeido/proto/go-openapiv2/models"
)

// KafeidoServiceRunProjectPipelineReader is a Reader for the KafeidoServiceRunProjectPipeline structure.
type KafeidoServiceRunProjectPipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KafeidoServiceRunProjectPipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKafeidoServiceRunProjectPipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewKafeidoServiceRunProjectPipelineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewKafeidoServiceRunProjectPipelineOK creates a KafeidoServiceRunProjectPipelineOK with default headers values
func NewKafeidoServiceRunProjectPipelineOK() *KafeidoServiceRunProjectPipelineOK {
	return &KafeidoServiceRunProjectPipelineOK{}
}

/*
KafeidoServiceRunProjectPipelineOK describes a response with status code 200, with default header values.

A successful response.
*/
type KafeidoServiceRunProjectPipelineOK struct {
	Payload *models.KafeidoRunProjectPipelineResponse
}

// IsSuccess returns true when this kafeido service run project pipeline o k response has a 2xx status code
func (o *KafeidoServiceRunProjectPipelineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kafeido service run project pipeline o k response has a 3xx status code
func (o *KafeidoServiceRunProjectPipelineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kafeido service run project pipeline o k response has a 4xx status code
func (o *KafeidoServiceRunProjectPipelineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kafeido service run project pipeline o k response has a 5xx status code
func (o *KafeidoServiceRunProjectPipelineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kafeido service run project pipeline o k response a status code equal to that given
func (o *KafeidoServiceRunProjectPipelineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the kafeido service run project pipeline o k response
func (o *KafeidoServiceRunProjectPipelineOK) Code() int {
	return 200
}

func (o *KafeidoServiceRunProjectPipelineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/projects/{projectId}/pipelines/{namedPipelineId}/run][%d] kafeidoServiceRunProjectPipelineOK %s", 200, payload)
}

func (o *KafeidoServiceRunProjectPipelineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/projects/{projectId}/pipelines/{namedPipelineId}/run][%d] kafeidoServiceRunProjectPipelineOK %s", 200, payload)
}

func (o *KafeidoServiceRunProjectPipelineOK) GetPayload() *models.KafeidoRunProjectPipelineResponse {
	return o.Payload
}

func (o *KafeidoServiceRunProjectPipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KafeidoRunProjectPipelineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKafeidoServiceRunProjectPipelineDefault creates a KafeidoServiceRunProjectPipelineDefault with default headers values
func NewKafeidoServiceRunProjectPipelineDefault(code int) *KafeidoServiceRunProjectPipelineDefault {
	return &KafeidoServiceRunProjectPipelineDefault{
		_statusCode: code,
	}
}

/*
KafeidoServiceRunProjectPipelineDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type KafeidoServiceRunProjectPipelineDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this kafeido service run project pipeline default response has a 2xx status code
func (o *KafeidoServiceRunProjectPipelineDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this kafeido service run project pipeline default response has a 3xx status code
func (o *KafeidoServiceRunProjectPipelineDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this kafeido service run project pipeline default response has a 4xx status code
func (o *KafeidoServiceRunProjectPipelineDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this kafeido service run project pipeline default response has a 5xx status code
func (o *KafeidoServiceRunProjectPipelineDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this kafeido service run project pipeline default response a status code equal to that given
func (o *KafeidoServiceRunProjectPipelineDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the kafeido service run project pipeline default response
func (o *KafeidoServiceRunProjectPipelineDefault) Code() int {
	return o._statusCode
}

func (o *KafeidoServiceRunProjectPipelineDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/projects/{projectId}/pipelines/{namedPipelineId}/run][%d] KafeidoService_RunProjectPipeline default %s", o._statusCode, payload)
}

func (o *KafeidoServiceRunProjectPipelineDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/projects/{projectId}/pipelines/{namedPipelineId}/run][%d] KafeidoService_RunProjectPipeline default %s", o._statusCode, payload)
}

func (o *KafeidoServiceRunProjectPipelineDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *KafeidoServiceRunProjectPipelineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
KafeidoServiceRunProjectPipelineBody kafeido service run project pipeline body
swagger:model KafeidoServiceRunProjectPipelineBody
*/
type KafeidoServiceRunProjectPipelineBody struct {

	// parameters
	Parameters map[string]string `json:"parameters,omitempty"`
}

// Validate validates this kafeido service run project pipeline body
func (o *KafeidoServiceRunProjectPipelineBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kafeido service run project pipeline body based on context it is used
func (o *KafeidoServiceRunProjectPipelineBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KafeidoServiceRunProjectPipelineBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KafeidoServiceRunProjectPipelineBody) UnmarshalBinary(b []byte) error {
	var res KafeidoServiceRunProjectPipelineBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
